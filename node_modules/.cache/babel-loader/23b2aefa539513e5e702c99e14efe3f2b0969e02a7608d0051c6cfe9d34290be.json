{"ast":null,"code":"var _jsxFileName = \"/Users/a1111/Desktop/Study/js-sprint-react-twittler-spa/src/Pages/MyPage.js\";\nimport React from \"react\";\nimport { dummyTweets } from \"../static/dummyData\";\nimport \"./MyPage.css\";\n// ! 위 코드는 수정하지 않습니다.\n\nimport Footer from \"../Footer\";\n// TODO - import문을 이용하여 Footer 컴포넌트를 불러옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  // TODO - filter 메소드를 이용하여 username이 kimcoding인 요소만 있는 배열을 filteredTweet에 할당합니다.\n\n  const filteredTweets = dummyTweets;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"myInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myInfo__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myInfo__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: filteredTweets[0].picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"myInfo__detailName\",\n            children: [filteredTweets[0].username, \" Profile\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"28 \\uD314\\uB85C\\uC6CC 100 \\uD314\\uB85C\\uC789\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets__mypage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \".filter(() =>)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet__userInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet__username\",\n              children: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet__createdAt\",\n              children: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet__message\",\n            children: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, \"\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \"TODO : Footer \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uB97C \\uC791\\uC131\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","dummyTweets","Footer","jsxDEV","_jsxDEV","MyPage","filteredTweets","className","children","src","picture","fileName","_jsxFileName","lineNumber","columnNumber","username","_c","$RefreshReg$"],"sources":["/Users/a1111/Desktop/Study/js-sprint-react-twittler-spa/src/Pages/MyPage.js"],"sourcesContent":["import React from \"react\";\nimport { dummyTweets } from \"../static/dummyData\";\nimport \"./MyPage.css\";\n// ! 위 코드는 수정하지 않습니다.\n\nimport Footer from \"../Footer\";\n// TODO - import문을 이용하여 Footer 컴포넌트를 불러옵니다.\n\nconst MyPage = () => {\n  // TODO - filter 메소드를 이용하여 username이 kimcoding인 요소만 있는 배열을 filteredTweet에 할당합니다.\n\n  const filteredTweets = dummyTweets;\n\n  return (\n    <section className=\"myInfo\">\n      <div className=\"myInfo__container\">\n        <div className=\"myInfo__wrapper\">\n          <div className=\"myInfo__profile\">\n            <img src={filteredTweets[0].picture} />\n          </div>\n          <div className=\"myInfo__detail\">\n            <p className=\"myInfo__detailName\">\n              {filteredTweets[0].username} Profile\n            </p>\n            <p>28 팔로워 100 팔로잉</p>\n          </div>\n        </div>\n      </div>\n      <ul className=\"tweets__mypage\">\n        {/* TODO : dummyTweets중 kimcoding 이 작성한 트윗 메세지만 있어야 합니다. */}\n        <div>\n          .filter(() =>)\n        </div>\n        <li className=\"tweet\" key={\"\"}>\n          <div className=\"tweet__profile\">\n            <img src={\"\"} />\n          </div>\n          <div className=\"tweet__content\">\n            <div className=\"tweet__userInfo\">\n              <span className=\"tweet__username\">{\"\"}</span>\n              <span className=\"tweet__createdAt\">{\"\"}</span>\n            </div>\n            <div className=\"tweet__message\">{\"\"}</div>\n          </div>\n        </li>\n        \n      </ul>\n      TODO : Footer 컴포넌트를 작성합니다.\n      <Footer />\n    </section>\n  );\n};\n\nexport default MyPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}